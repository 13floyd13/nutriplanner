# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/ # Remplacez par le chemin de votre rapport Jacoco
        
    - name: jacoco-badge-generator
      # You may pin to the exact commit or the version.
      # uses: cicirello/jacoco-badge-generator@a0c1eb19a496308187341ed2a736ef5df78b7003
      uses: cicirello/jacoco-badge-generator@v2.9.0
      with:
        # Full path, relative to the root of the repository, to the jacoco csv file(s), including filename(s)
        jacoco-csv-file: target/site/jacoco/jacoco.csv
        # The directory for storing badges, relative to the root of the repository.
        badges-directory: .github/badges
        # The filename of the coverage badge.
        coverage-badge-filename: jacoco.svg
        # The filename of the branches coverage badge.
        branches-badge-filename: branches.svg
        # Controls whether or not to generate the coverage badge.
#         generate-coverage-badge: true
        # Controls whether or not to generate the branches coverage badge.
#         generate-branches-badge: # optional
        # Text for the left-side of the coverage badge.
        coverage-label: coverage
        # Text for the left-side of the branches coverage badge.
        branches-label: branches
        # Controls what happens if one or more jacoco.csv files do not exist.
        on-missing-report: fail
        # Enables failing workflow run when coverage below specified threshold.
#         fail-if-coverage-less-than: # optional, default is 0
#         # Enables failing workflow run when branches coverage below specified threshold.
#         fail-if-branches-less-than: # optional, default is 0
#         # Enables failing workflow if coverage is less than it was on previous run.
#         fail-on-coverage-decrease: # optional
#         # Enables failing workflow if branches coverage is less than it was on previous run.
#         fail-on-branches-decrease: # optional
#         # List of coverage percentages as cutoffs for each color.
#         intervals: # optional, default is 100 90 80 70 60 0
#         # List of colors to use ordered by coverage interval, best coverage to worst.
#         colors: # optional, default is #4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44
#         # Controls whether or not to generate the coverage JSON endpoint.
#         generate-coverage-endpoint: # optional
#         # Controls whether or not to generate the branches coverage JSON endpoint.
#         generate-branches-endpoint: # optional
#         # The filename of the coverage JSON endpoint.
#         coverage-endpoint-filename: # optional, default is jacoco.json
#         # The filename of the branches coverage JSON endpoint.
#         branches-endpoint-filename: # optional, default is branches.json
#         # Controls whether or not to generate a JSON file containing the coverage percentages as floating-point values.
#         generate-summary: # optional
#         # The filename of the summary file.
#         summary-filename: # optional, default is coverage-summary.json

      
#   sonar:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - name: Cache SonarQube packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Maven packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
#       - name: Build and analyze
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=nutriplanner -Dsonar.projectName='nutriplanner'

